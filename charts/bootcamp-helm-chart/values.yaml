# pvc:
#   name: database
#   storage: 4Gi
#   accessModes:
#   - ReadWriteOnce
# deployments:
#   - deployment_name: mockserver-deployment
#     label_name: mockserver-pod
#     container_name: mockserver-container
#     replicaCount: 1
#     image:
#       repository: ghcr.io/satyanarayana-senapathi/bootcamp2-mockserver:latest
#     imagePullSecrets: my-ghcr-secret
#     port: 3005   

#   - deployment_name: frontend-deployment
#     label_name: frontend-pod
#     container_name: frontend-container
#     replicaCount: 1     
#     image:
#       repository: ghcr.io/satyanarayana-senapathi/bootcamp-frontend:latest
#     imagePullSecrets: my-ghcr-secret
#     port: 80

#   - deployment_name: database-deployment
#     label_name: database-pod
#     container_name: database-container
#     replicaCount: 1     
#     image:
#       repository: mysql:latest
#     imagePullSecrets: my-ghcr-secret
#     envFrom: database-secret  
#     port: 3306
#     volumeMounts:
#     - mountPath: /var/lib/mysql
#       name: mysql-volume
#     - name:  database-config
#       mountPath: /etc/mysql/conf.d/
#     volumes: 
#     - name: mysql-volume
#       persistentVolumeClaim:
#         claimName: database
#     - name: database-config
#       configMap:
#       name: mysql-config
#       optional: false

#   - deployment_name: service-registry-deployment
#     label_name: service-registry-pod
#     container_name: service-registry-container
#     replicaCount: 1     
#     image:
#       repository:  ghcr.io/satyanarayana-senapathi/bootcamp-backend-service-registry:latest
#     imagePullSecrets: my-ghcr-secret
#     port: 8761
#     env:
#     - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
#       value: https://api1.bootcamp64.tk/eureka/
      
#     - name: EUREKA_INSTANCE_HOSTNAME
#       value: service-registry-service

#   - deployment_name: api-gateway-deployment
#     label_name: api-gateway-pod
#     container_name: api-gateway-container
#     replicaCount: 1     
#     image:
#       repository:  ghcr.io/satyanarayana-senapathi/bootcamp-backend-api-gateway:latest
#     imagePullSecrets: my-ghcr-secret
#     port: 9191
#     env:
#     - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
#       value: https://api1.bootcamp64.tk/eureka/
      
#     - name: EUREKA_INSTANCE_HOSTNAME
#       value: api-gateway-service
    
#   - deployment_name: address-service-deployment
#     label_name: address-service-pod
#     container_name: address-service-container
#     replicaCount: 1     
#     image:
#       repository: ghcr.io/satyanarayana-senapathi/bootcamp-backend-address-service:latest
#     imagePullSecrets: my-ghcr-secret
#     port: 9001
#     env:
#     - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
#       value: https://api1.bootcamp64.tk/eureka/

#     - name: SPRING_DATASOURCE_URL
#       value: jdbc:mysql://54.197.220.35:30002/zemoso_diagnostics?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC

#     - name: SPRING_DATASOURCE_PASSWORD
#       value: bc@95
      
#     - name: EUREKA_INSTANCE_HOSTNAME
#       value: address-service
  
#   - deployment_name: example-deployment
#     replicaCount: 3
#     label_name: example-app
#     container_name: example-container
#     image:
#       repository: nginx:latest
#     envFrom: example-secret
#     env:
#       - name: ENV_VAR1
#         value: value1
#       - name: ENV_VAR2
#         value: value2
#     port: 80
#     livenessProbe:
#       path: /healthz
#       port: 8080
#       initialDelaySeconds: 3
#       periodSeconds: 5
#     readinessProbe:
#       path: /readiness
#       port: 8080
#       initialDelaySeconds: 5
#       periodSeconds: 10
#     volumeMounts:
#       - name: data-volume
#         mountPath: /data
#     imagePullSecrets: my-registry-secret
#     affinity:
#       nodeSelectorKey: node-role
#       nodeSelectorOperator: In
#       nodeSelectorValue: worker
#     tolerations:
#       - key: "example-key"
#         operator: "Equal"
#         value: "example-value"
#         effect: "NoSchedule"
#     taints:
#       example-key: example-value:NoSchedule
#     volumes:
#       - name: data-volume
#         emptyDir: {}



# services:

#   - service_name: mockserver-service
#     label_name: mockserver-pod
#     type: ClusterIP
#     port: 3005
#     targetPort: 3005
  
#   - service_name: frontend-service
#     label_name: frontend-pod
#     type: ClusterIP
#     port: 80
#     targetPort: 80
  
#   - service_name: database-service
#     label_name: database-pod
#     type: NodePort
#     port: 3306
#     targetPort: 3306
#     nodePort: 30002

#   - service_name: service-registry-service
#     label_name: service-registry-pod
#     type: ClusterIP
#     port: 8761
#     targetPort: 8761

#   - service_name: api-gateway-service
#     label_name: api-gateway-pod
#     type: ClusterIP
#     port: 9191
#     targetPort: 9191
  

ingress:
  enabled: "true"
#   name: my-ingress
#   className: nginx
#   annotations: {nginx.ingress.kubernetes.io/use-regex: "true"}
#   rules:
#   - host: fr1.bootcamp64.tk
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: frontend-service
#             port:
#               number: 80
#   - host: ms1.bootcamp64.tk
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: mockserver-service
#             port:
#               number: 3005
#   - host: api1.bootcamp64.tk
#     http:
#       paths:
#       - path: /$
#         pathType: Exact
#         backend:
#           service:
#             name: service-registry-service
#             port:
#               number: 8761
#       - path: /eureka
#         pathType: Prefix
#         backend:
#           service:
#             name: service-registry-service
#             port:
#               number: 8761
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: api-gateway-service
#             port:
#               number: 9191



configmaps:
  - name: mysql-config
    file: config.cnf
    content: |
      [mysqld]
      max_connections=4000
